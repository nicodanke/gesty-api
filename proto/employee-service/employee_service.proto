syntax = "proto3";

package employee_service;

import "employee-service/requests/action/rpc_get_actions.proto";
import "employee-service/requests/action/rpc_get_action.proto";
import "employee-service/requests/action/rpc_create_action.proto";
import "employee-service/requests/action/rpc_update_action.proto";
import "employee-service/requests/action/rpc_delete_action.proto";
import "employee-service/requests/employee/rpc_get_employees.proto";
import "employee-service/requests/employee/rpc_get_employee.proto";
import "employee-service/requests/employee/rpc_create_employee.proto";
import "employee-service/requests/employee/rpc_update_employee.proto";
import "employee-service/requests/employee/rpc_delete_employee.proto";
import "employee-service/requests/facility/rpc_get_facilities.proto";
import "employee-service/requests/facility/rpc_get_facility.proto";
import "employee-service/requests/facility/rpc_create_facility.proto";
import "employee-service/requests/facility/rpc_update_facility.proto";
import "employee-service/requests/facility/rpc_delete_facility.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/nicodanke/gesty-api/shared/proto/employee-service";

service EmployeeService {

    // ACTION
    rpc GetAction (employee_service.requests.action.get_action.GetActionRequest) returns (employee_service.requests.action.get_action.GetActionResponse);

    rpc GetActions (employee_service.requests.action.get_actions.GetActionsRequest) returns (employee_service.requests.action.get_actions.GetActionsResponse);

    rpc CreateAction (employee_service.requests.action.create_action.CreateActionRequest) returns (employee_service.requests.action.create_action.CreateActionResponse);

    rpc UpdateAction (employee_service.requests.action.update_action.UpdateActionRequest) returns (employee_service.requests.action.update_action.UpdateActionResponse);

    rpc DeleteAction (employee_service.requests.action.delete_action.DeleteActionRequest) returns (google.protobuf.Empty);


    // FACILITY
    rpc GetFacility (employee_service.requests.facility.get_facility.GetFacilityRequest) returns (employee_service.requests.facility.get_facility.GetFacilityResponse);

    rpc GetFacilities (employee_service.requests.facility.get_facilities.GetFacilitiesRequest) returns (employee_service.requests.facility.get_facilities.GetFacilitiesResponse);

    rpc CreateFacility (employee_service.requests.facility.create_facility.CreateFacilityRequest) returns (employee_service.requests.facility.create_facility.CreateFacilityResponse);

    rpc UpdateFacility (employee_service.requests.facility.update_facility.UpdateFacilityRequest) returns (employee_service.requests.facility.update_facility.UpdateFacilityResponse);

    rpc DeleteFacility (employee_service.requests.facility.delete_facility.DeleteFacilityRequest) returns (google.protobuf.Empty);


    // EMPLOYEE
    rpc GetEmployee (employee_service.requests.employee.get_employee.GetEmployeeRequest) returns (employee_service.requests.employee.get_employee.GetEmployeeResponse);

    rpc GetEmployees (employee_service.requests.employee.get_employees.GetEmployeesRequest) returns (employee_service.requests.employee.get_employees.GetEmployeesResponse);

    rpc CreateEmployee (employee_service.requests.employee.create_employee.CreateEmployeeRequest) returns (employee_service.requests.employee.create_employee.CreateEmployeeResponse);

    rpc UpdateEmployee (employee_service.requests.employee.update_employee.UpdateEmployeeRequest) returns (employee_service.requests.employee.update_employee.UpdateEmployeeResponse);

    rpc DeleteEmployee (employee_service.requests.employee.delete_employee.DeleteEmployeeRequest) returns (google.protobuf.Empty);
}