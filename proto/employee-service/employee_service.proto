syntax = "proto3";

package employee_service;

import "employee-service/requests/account/rpc_create_account.proto";
import "employee-service/requests/action/rpc_get_actions.proto";
import "employee-service/requests/action/rpc_get_action.proto";
import "employee-service/requests/action/rpc_create_action.proto";
import "employee-service/requests/action/rpc_update_action.proto";
import "employee-service/requests/action/rpc_delete_action.proto";
import "employee-service/requests/device/rpc_get_devices.proto";
import "employee-service/requests/device/rpc_get_device.proto";
import "employee-service/requests/device/rpc_create_device.proto";
import "employee-service/requests/device/rpc_update_device.proto";
import "employee-service/requests/device/rpc_delete_device.proto";
import "employee-service/requests/device/rpc_generate_activation_code.proto";
import "employee-service/requests/device/rpc_activate_device.proto";
import "employee-service/requests/device/rpc_refresh_device_token.proto";
import "employee-service/requests/device_health/rpc_create_device_health.proto";
import "employee-service/requests/employee/rpc_get_employees.proto";
import "employee-service/requests/employee/rpc_get_employee.proto";
import "employee-service/requests/employee/rpc_create_employee.proto";
import "employee-service/requests/employee/rpc_update_employee.proto";
import "employee-service/requests/employee/rpc_delete_employee.proto";
import "employee-service/requests/facility/rpc_get_facilities.proto";
import "employee-service/requests/facility/rpc_get_facility.proto";
import "employee-service/requests/facility/rpc_create_facility.proto";
import "employee-service/requests/facility/rpc_update_facility.proto";
import "employee-service/requests/facility/rpc_delete_facility.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/nicodanke/gesty-api/shared/proto/employee-service";

service EmployeeService {

    // account
    rpc CreateAccount (employee_service.requests.account.create_account.CreateAccountRequest) returns (google.protobuf.Empty);

    // ACTION
    rpc GetAction (employee_service.requests.action.get_action.GetActionRequest) returns (employee_service.requests.action.get_action.GetActionResponse);

    rpc GetActions (employee_service.requests.action.get_actions.GetActionsRequest) returns (employee_service.requests.action.get_actions.GetActionsResponse);

    rpc CreateAction (employee_service.requests.action.create_action.CreateActionRequest) returns (employee_service.requests.action.create_action.CreateActionResponse);

    rpc UpdateAction (employee_service.requests.action.update_action.UpdateActionRequest) returns (employee_service.requests.action.update_action.UpdateActionResponse);

    rpc DeleteAction (employee_service.requests.action.delete_action.DeleteActionRequest) returns (google.protobuf.Empty);


    // FACILITY
    rpc GetFacility (employee_service.requests.facility.get_facility.GetFacilityRequest) returns (employee_service.requests.facility.get_facility.GetFacilityResponse);

    rpc GetFacilities (employee_service.requests.facility.get_facilities.GetFacilitiesRequest) returns (employee_service.requests.facility.get_facilities.GetFacilitiesResponse);

    rpc CreateFacility (employee_service.requests.facility.create_facility.CreateFacilityRequest) returns (employee_service.requests.facility.create_facility.CreateFacilityResponse);

    rpc UpdateFacility (employee_service.requests.facility.update_facility.UpdateFacilityRequest) returns (employee_service.requests.facility.update_facility.UpdateFacilityResponse);

    rpc DeleteFacility (employee_service.requests.facility.delete_facility.DeleteFacilityRequest) returns (google.protobuf.Empty);


    // EMPLOYEE
    rpc GetEmployee (employee_service.requests.employee.get_employee.GetEmployeeRequest) returns (employee_service.requests.employee.get_employee.GetEmployeeResponse);

    rpc GetEmployees (employee_service.requests.employee.get_employees.GetEmployeesRequest) returns (employee_service.requests.employee.get_employees.GetEmployeesResponse);

    rpc CreateEmployee (employee_service.requests.employee.create_employee.CreateEmployeeRequest) returns (employee_service.requests.employee.create_employee.CreateEmployeeResponse);

    rpc UpdateEmployee (employee_service.requests.employee.update_employee.UpdateEmployeeRequest) returns (employee_service.requests.employee.update_employee.UpdateEmployeeResponse);

    rpc DeleteEmployee (employee_service.requests.employee.delete_employee.DeleteEmployeeRequest) returns (google.protobuf.Empty);


    // DEVICE
    rpc GetDevice (employee_service.requests.device.get_device.GetDeviceRequest) returns (employee_service.requests.device.get_device.GetDeviceResponse);

    rpc GetDevices (employee_service.requests.device.get_devices.GetDevicesRequest) returns (employee_service.requests.device.get_devices.GetDevicesResponse);

    rpc CreateDevice (employee_service.requests.device.create_device.CreateDeviceRequest) returns (employee_service.requests.device.create_device.CreateDeviceResponse);

    rpc UpdateDevice (employee_service.requests.device.update_device.UpdateDeviceRequest) returns (employee_service.requests.device.update_device.UpdateDeviceResponse);

    rpc DeleteDevice (employee_service.requests.device.delete_device.DeleteDeviceRequest) returns (google.protobuf.Empty);

    rpc GenerateActivationCode (employee_service.requests.device.generate_activation_code.GenerateActivationCodeRequest) returns (employee_service.requests.device.generate_activation_code.GenerateActivationCodeResponse);

    rpc ActivateDevice (employee_service.requests.device.activate_device.ActivateDeviceRequest) returns (employee_service.requests.device.activate_device.ActivateDeviceResponse);

    rpc RefreshDeviceToken (employee_service.requests.device.refresh_device_token.RefreshDeviceTokenRequest) returns (employee_service.requests.device.refresh_device_token.RefreshDeviceTokenResponse);


    // DEVICE HEALTH
    rpc CreateDeviceHealth (employee_service.requests.device_health.create_device_health.CreateDeviceHealthRequest) returns (employee_service.requests.device_health.create_device_health.CreateDeviceHealthResponse);
}