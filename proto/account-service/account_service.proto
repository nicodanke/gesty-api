syntax = "proto3";

package account_service;

import "account-service/requests/account/rpc_create_account.proto";
import "account-service/requests/account/rpc_update_account.proto";
import "account-service/requests/user/rpc_get_users.proto";
import "account-service/requests/user/rpc_create_user.proto";
import "account-service/requests/user/rpc_delete_user.proto";
import "account-service/requests/role/rpc_get_roles.proto";
import "account-service/requests/role/rpc_create_role.proto";
import "account-service/requests/role/rpc_delete_role.proto";
import "account-service/requests/login/rpc_login.proto";
import "account-service/requests/login/rpc_refresh_token.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/nicodanke/gesty-api/shared/proto/account-service";

service AccountService {
    // LOGIN
    rpc Login (account_service.requests.login.login.LoginRequest) returns (account_service.requests.login.login.LoginResponse);

    rpc RefreshToken (account_service.requests.login.refresh_token.RefreshTokenRequest) returns (account_service.requests.login.refresh_token.RefreshTokenResponse);


    // ACCOUNT
    rpc CreateAccount (account_service.requests.account.create_account.CreateAccountRequest) returns (account_service.requests.account.create_account.CreateAccountResponse);

    rpc UpdateAccount (account_service.requests.account.update_account.UpdateAccountRequest) returns (account_service.requests.account.update_account.UpdateAccountResponse);


    // USER
    rpc GetUsers (account_service.requests.user.get_users.GetUsersRequest) returns (account_service.requests.user.get_users.GetUsersResponse);

    rpc CreateUser (account_service.requests.user.create_user.CreateUserRequest) returns (account_service.requests.user.create_user.CreateUserResponse);

    rpc DeleteUser (account_service.requests.user.delete_user.DeleteUserRequest) returns (google.protobuf.Empty);


    // ROLE
    rpc GetRoles (account_service.requests.role.get_roles.GetRolesRequest) returns (account_service.requests.role.get_roles.GetRolesResponse);

    rpc CreateRole (account_service.requests.role.create_role.CreateRoleRequest) returns (account_service.requests.role.create_role.CreateRoleResponse);

    rpc DeleteRole (account_service.requests.role.delete_role.DeleteRoleRequest) returns (google.protobuf.Empty);
}